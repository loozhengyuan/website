name: build

on:
  schedule:
    # Triggers daily at 00:00 UTC
    - cron: "0 0 * * *"
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Compile site
    runs-on: ubuntu-latest
    timeout-minutes: 3

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0
          bundler-cache: true

      - name: Build site
        env:
          JEKYLL_ENV: production
        run: |
          bundle exec jekyll build

      - name: Upload build assets
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: build # Upload entire directory
          if-no-files-found: error

  audit:
    name: Run Lighthouse audit
    needs:
      - build
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Download build assets
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build # Download to subdirectory

      - name: Set up Node
        uses: actions/setup-node@v3.1.0
        with:
          node-version: "14"

      # The yarn cache directory will depend on your operating
      # system and version of yarn.
      # https://yarnpkg.com/lang/en/docs/cli/cache/ for more info.
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restore yarn cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # Don’t generate a yarn.lock lockfile and fail if an update is needed.
      - name: Install dependencies
        run: |
          yarn install --frozen-lock-file

      - name: Run Lighthouse audit
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        run: |
          yarn run lhci autorun

  deploy:
    name: Deploy on Cloudflare
    needs:
      - audit
    runs-on: ubuntu-latest
    if: (github.event_name == 'push' || github.event_name == 'schedule') && github.ref == 'refs/heads/main'
    timeout-minutes: 1

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Download build assets
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build # Download to subdirectory

      - name: Set up Node
        uses: actions/setup-node@v3.1.0
        with:
          node-version: "14"

      # The yarn cache directory will depend on your operating
      # system and version of yarn.
      # https://yarnpkg.com/lang/en/docs/cli/cache/ for more info.
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restore yarn cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # Don’t generate a yarn.lock lockfile and fail if an update is needed.
      - name: Install dependencies
        run: |
          yarn install --frozen-lock-file

      - name: Deploy on Cloudflare Workers Sites
        env:
          CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CF_ZONE_ID: ${{ secrets.CF_ZONE_ID }}
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
        run: |
          yarn run wrangler publish
